//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourseManagementSystemClientApplication.CourseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Course", Namespace="http://schemas.datacontract.org/2004/07/CourseManagementSystem")]
    [System.SerializableAttribute()]
    public partial class Course : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseScopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseId {
            get {
                return this.CourseIdField;
            }
            set {
                if ((this.CourseIdField.Equals(value) != true)) {
                    this.CourseIdField = value;
                    this.RaisePropertyChanged("CourseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseImage {
            get {
                return this.CourseImageField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseImageField, value) != true)) {
                    this.CourseImageField = value;
                    this.RaisePropertyChanged("CourseImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseScope {
            get {
                return this.CourseScopeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseScopeField, value) != true)) {
                    this.CourseScopeField = value;
                    this.RaisePropertyChanged("CourseScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((this.PaymentField.Equals(value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherId {
            get {
                return this.TeacherIdField;
            }
            set {
                if ((this.TeacherIdField.Equals(value) != true)) {
                    this.TeacherIdField = value;
                    this.RaisePropertyChanged("TeacherId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourseService.ICourseService")]
    public interface ICourseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseById", ReplyAction="http://tempuri.org/ICourseService/GetCourseByIdResponse")]
        CourseManagementSystemClientApplication.CourseService.Course GetCourseById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseById", ReplyAction="http://tempuri.org/ICourseService/GetCourseByIdResponse")]
        System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course> GetCourseByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetAllCourses", ReplyAction="http://tempuri.org/ICourseService/GetAllCoursesResponse")]
        CourseManagementSystemClientApplication.CourseService.Course[] GetAllCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetAllCourses", ReplyAction="http://tempuri.org/ICourseService/GetAllCoursesResponse")]
        System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course[]> GetAllCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetAllCourseByTeacherId", ReplyAction="http://tempuri.org/ICourseService/GetAllCourseByTeacherIdResponse")]
        CourseManagementSystemClientApplication.CourseService.Course[] GetAllCourseByTeacherId(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetAllCourseByTeacherId", ReplyAction="http://tempuri.org/ICourseService/GetAllCourseByTeacherIdResponse")]
        System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course[]> GetAllCourseByTeacherIdAsync(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetAllCourseByStudentId", ReplyAction="http://tempuri.org/ICourseService/GetAllCourseByStudentIdResponse")]
        CourseManagementSystemClientApplication.CourseService.Course[] GetAllCourseByStudentId(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetAllCourseByStudentId", ReplyAction="http://tempuri.org/ICourseService/GetAllCourseByStudentIdResponse")]
        System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course[]> GetAllCourseByStudentIdAsync(int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/AddCourse", ReplyAction="http://tempuri.org/ICourseService/AddCourseResponse")]
        bool AddCourse(CourseManagementSystemClientApplication.CourseService.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/AddCourse", ReplyAction="http://tempuri.org/ICourseService/AddCourseResponse")]
        System.Threading.Tasks.Task<bool> AddCourseAsync(CourseManagementSystemClientApplication.CourseService.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/UpdateCourse", ReplyAction="http://tempuri.org/ICourseService/UpdateCourseResponse")]
        bool UpdateCourse(CourseManagementSystemClientApplication.CourseService.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/UpdateCourse", ReplyAction="http://tempuri.org/ICourseService/UpdateCourseResponse")]
        System.Threading.Tasks.Task<bool> UpdateCourseAsync(CourseManagementSystemClientApplication.CourseService.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/DeleteCourse", ReplyAction="http://tempuri.org/ICourseService/DeleteCourseResponse")]
        bool DeleteCourse(int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/DeleteCourse", ReplyAction="http://tempuri.org/ICourseService/DeleteCourseResponse")]
        System.Threading.Tasks.Task<bool> DeleteCourseAsync(int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/EnrollStudentInCourse", ReplyAction="http://tempuri.org/ICourseService/EnrollStudentInCourseResponse")]
        bool EnrollStudentInCourse(int studentId, int courseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/EnrollStudentInCourse", ReplyAction="http://tempuri.org/ICourseService/EnrollStudentInCourseResponse")]
        System.Threading.Tasks.Task<bool> EnrollStudentInCourseAsync(int studentId, int courseId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseServiceChannel : CourseManagementSystemClientApplication.CourseService.ICourseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseServiceClient : System.ServiceModel.ClientBase<CourseManagementSystemClientApplication.CourseService.ICourseService>, CourseManagementSystemClientApplication.CourseService.ICourseService {
        
        public CourseServiceClient() {
        }
        
        public CourseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CourseManagementSystemClientApplication.CourseService.Course GetCourseById(int id) {
            return base.Channel.GetCourseById(id);
        }
        
        public System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course> GetCourseByIdAsync(int id) {
            return base.Channel.GetCourseByIdAsync(id);
        }
        
        public CourseManagementSystemClientApplication.CourseService.Course[] GetAllCourses() {
            return base.Channel.GetAllCourses();
        }
        
        public System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course[]> GetAllCoursesAsync() {
            return base.Channel.GetAllCoursesAsync();
        }
        
        public CourseManagementSystemClientApplication.CourseService.Course[] GetAllCourseByTeacherId(int teacherId) {
            return base.Channel.GetAllCourseByTeacherId(teacherId);
        }
        
        public System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course[]> GetAllCourseByTeacherIdAsync(int teacherId) {
            return base.Channel.GetAllCourseByTeacherIdAsync(teacherId);
        }
        
        public CourseManagementSystemClientApplication.CourseService.Course[] GetAllCourseByStudentId(int studentId) {
            return base.Channel.GetAllCourseByStudentId(studentId);
        }
        
        public System.Threading.Tasks.Task<CourseManagementSystemClientApplication.CourseService.Course[]> GetAllCourseByStudentIdAsync(int studentId) {
            return base.Channel.GetAllCourseByStudentIdAsync(studentId);
        }
        
        public bool AddCourse(CourseManagementSystemClientApplication.CourseService.Course course) {
            return base.Channel.AddCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> AddCourseAsync(CourseManagementSystemClientApplication.CourseService.Course course) {
            return base.Channel.AddCourseAsync(course);
        }
        
        public bool UpdateCourse(CourseManagementSystemClientApplication.CourseService.Course course) {
            return base.Channel.UpdateCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCourseAsync(CourseManagementSystemClientApplication.CourseService.Course course) {
            return base.Channel.UpdateCourseAsync(course);
        }
        
        public bool DeleteCourse(int courseId) {
            return base.Channel.DeleteCourse(courseId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCourseAsync(int courseId) {
            return base.Channel.DeleteCourseAsync(courseId);
        }
        
        public bool EnrollStudentInCourse(int studentId, int courseId) {
            return base.Channel.EnrollStudentInCourse(studentId, courseId);
        }
        
        public System.Threading.Tasks.Task<bool> EnrollStudentInCourseAsync(int studentId, int courseId) {
            return base.Channel.EnrollStudentInCourseAsync(studentId, courseId);
        }
    }
}
